Ready 2 Go
Uma Introdu√ß√£o Pr√°tica a Linguagem Go
17 Mar 2018
Tags: floripa-gophers, golang

Ellen K√∂rbes
e@ellenkorbes.com
@ellenkorbes

* Workshop Ready 2 Go

Vers√£o completa do Workshop:
[[https://github.com/ellenkorbes/ready-to-go]]

Vers√£o em slides:
[[https://github.com/danicat/ready2go]]

Vers√£o 20 minutos (essa talk):
[[https://github.com/ellenkorbes/ready2go20]]

.image GOPHER_LEARN.png _ 400

* O que √© Go? Pra que serve? Qual sua filosofia?

Pesquisa no Google.

.image GOPHER_SAFARI.png _ 300

* Comunidade

Gophers!

.image gopher_6.jpg _ 300

Slack:
[[https://invite.slack.golangbridge.org]]

Grupo de estudo (quintas-feiras 10PM):
[[https://hangouts.google.com/hangouts/_/crg.eti.br/golang]]

Women Who Go Floripa:
[[https://www.facebook.com/WWGFloripa/]]

* Usos de Go pelo mundo

.image google.png _ 300
.image dropbox.png _ 300
.image microsoft.png _ 300
.image globocom.png _ 300
- [[https://github.com/golang/go/wiki/GoUsers]]

* Interesse ao longo do tempo

Linguagem #9 de acordo com o GitHub em 2017. (+52% em rela√ß√£o a 2016)

.image trend.png _ 800

* Hello world!

.play hello.go

.image GoBuild.png _ 300

* Vari√°veis

Tipos primitivos: int, bool, string, float64, complex128.
Outras estruturas: struct, array, slice, map.

.play var.go

* Ponteiros

Operadores:

& ‚Üí endere√ßo
* ‚Üí derrefer√™ncia

.play pointers.go

* Escopo

- P√∫blico (inicial mai√∫scula)
- Privado (inicial min√∫scula)

.code testpkg.go

.code scope.go /^func main/,/^}/

* Fun√ß√µes

.play func.go

* Fun√ß√µes II: O Retorno

.play func2.go

* Controle de Fluxo

.play for.go /^func main/,/^}/

* Controle de Fluxo II: A Vingan√ßa

.play switch.go /START OMIT/,/END OMIT/

* Arrays

.play array.go /START OMIT/,/END OMIT/

* Slices

.play slice.go /START OMIT/,/END OMIT/

* Maps

.play map.go /START OMIT/,/END OMIT/

* Structs

.play struct.go /START OMIT/,/END OMIT/

* M√©todos

.play methods.go

* Interfaces

.play interface.go /START OMIT/,/END OMIT/

* Goroutines

.play goroutine.go /START OMIT/,/END OMIT/

* Channels

.play chan.go /START OMIT/,/END OMIT/

* Tipos de Channels

.play chan2a.go /START OMIT/,/END OMIT/

* Tipos de Channels 2: A Aventura Continua

.play chan2b.go /START OMIT/,/END OMIT/

* T√©cnicas de Concorr√™ncia: Generator

.play chan3.go /START OMIT/,/END OMIT/

* T√©cnicas de Concorr√™ncia: Pipeline

.play pipeline.go /START OMIT/,/END OMIT/

* Programa√ß√£o Concorrente: N√£o Concorrente

.play conc.go /START OMIT/,/END OMIT/

* Programa√ß√£o Concorrente: "Meio" Concorrente

.play conc2.go /START OMIT/,/END OMIT/

* Programa√ß√£o Concorrente: Go Routines Everywhere \o/

.play conc3.go /START OMIT/,/END OMIT/

* Palavras Finais

- A proposta do Go √© ser simples e consistente.
- A palavra chave √© **concorr√™ncia*.
- N√£o tem **generics*! ‚ò†

* Lic√£o de Casa

- Veja exemplos disso tudo em a√ß√£o.
- Refa√ßa os exemplos no seu editor.
- (N√£o vale copiar e colar!)
- Have fun üòä
- [[https://gobyexample.com]]

* Refer√™ncias

- [[https://www.golang.org]]
- [[https://blog.golang.org]]
- [[https://golang.org/doc]]

.image GoCommunity.png _ 600